{"ast":null,"code":"import axios from 'axios';\nconst joblistingsUrl = 'api/v1/joblistings'; // Gets all the job listings from the database\n\nexport const getJobListings = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_DATA'\n    });\n    axios.get(joblistingsUrl).then(data => dispatch({\n      type: 'ADD_JOB_LISTINGS',\n      jobListings: data.data.data\n    })).catch(error => console.error(error));\n  };\n}; // Creates a new job listing with the provided params\n\nexport const createJobListing = (name, description, startDate, endDate) => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_DATA'\n    });\n    axios.post(joblistingsUrl, {\n      name: name,\n      description: description,\n      start_date: startDate,\n      end_date: endDate\n    }).then(data => dispatch({\n      type: 'ADD_NEW_JOB_LISTING',\n      jobListings: data.data\n    })).catch(error => console.error('There was an error creating this job listing', error));\n  };\n}; // Edits the selected job listing with the new params\n\nexport const editJobListing = (jobListingId, name, description, startDate, endDate) => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_DATA'\n    });\n    axios.patch(joblistingsUrl + '/' + jobListingId, {\n      name: name,\n      description: description,\n      start_date: startDate,\n      end_date: endDate\n    }).then(data => dispatch({\n      type: 'ADD_NEW_JOB_LISTING',\n      jobListings: data.data\n    })).catch(error => console.error('There was an error updating this job listing', error));\n  };\n}; // Deletes the selected job listing from the database\n\nexport const deleteJobListing = jobListingId => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_DATA'\n    });\n    axios.delete(joblistingsUrl + '/' + jobListingId).then(() => dispatch({\n      type: 'REMOVE_JOB_LISTING',\n      jobListingId\n    })).catch(error => console.error(error));\n  };\n};","map":{"version":3,"sources":["/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/actions/joblistingActions.js"],"names":["axios","joblistingsUrl","getJobListings","dispatch","type","get","then","data","jobListings","catch","error","console","createJobListing","name","description","startDate","endDate","post","start_date","end_date","editJobListing","jobListingId","patch","deleteJobListing","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,oBAAvB,C,CACA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AACnC,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAJ,IAAAA,KAAK,CAACK,GAAN,CAAUJ,cAAV,EACEK,IADF,CACOC,IAAI,IAAIJ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,kBAAR;AAA4BI,MAAAA,WAAW,EAAED,IAAI,CAACA,IAAL,CAAUA;AAAnD,KAAD,CADvB,EAEEE,KAFF,CAEQC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFjB;AAGA,GALD;AAMA,CAPM,C,CAQP;;AACA,OAAO,MAAME,gBAAgB,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,SAApB,EAA+BC,OAA/B,KAA2C;AAC1E,SAAOb,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAJ,IAAAA,KAAK,CAACiB,IAAN,CAAWhB,cAAX,EAA2B;AAC1BY,MAAAA,IAAI,EAAEA,IADoB;AAE1BC,MAAAA,WAAW,EAAEA,WAFa;AAG1BI,MAAAA,UAAU,EAAEH,SAHc;AAI1BI,MAAAA,QAAQ,EAAEH;AAJgB,KAA3B,EAMEV,IANF,CAMOC,IAAI,IAAIJ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,qBAAR;AAA+BI,MAAAA,WAAW,EAAED,IAAI,CAACA;AAAjD,KAAD,CANvB,EAOEE,KAPF,CAOQC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,8CAAd,EAA8DA,KAA9D,CAPjB;AAQA,GAVD;AAWA,CAZM,C,CAaP;;AACA,OAAO,MAAMU,cAAc,GAAG,CAACC,YAAD,EAAeR,IAAf,EAAqBC,WAArB,EAAkCC,SAAlC,EAA6CC,OAA7C,KAAyD;AACtF,SAAOb,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAJ,IAAAA,KAAK,CAACsB,KAAN,CAAYrB,cAAc,GAAG,GAAjB,GAAuBoB,YAAnC,EAAiD;AAChDR,MAAAA,IAAI,EAAEA,IAD0C;AAEhDC,MAAAA,WAAW,EAAEA,WAFmC;AAGhDI,MAAAA,UAAU,EAAEH,SAHoC;AAIhDI,MAAAA,QAAQ,EAAEH;AAJsC,KAAjD,EAMEV,IANF,CAMOC,IAAI,IAAIJ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,qBAAR;AAA+BI,MAAAA,WAAW,EAAED,IAAI,CAACA;AAAjD,KAAD,CANvB,EAOEE,KAPF,CAOQC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,8CAAd,EAA8DA,KAA9D,CAPjB;AAQA,GAVD;AAWA,CAZM,C,CAaP;;AACA,OAAO,MAAMa,gBAAgB,GAAGF,YAAY,IAAI;AAC/C,SAAOlB,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAJ,IAAAA,KAAK,CAACwB,MAAN,CAAavB,cAAc,GAAG,GAAjB,GAAuBoB,YAApC,EACEf,IADF,CACO,MAAMH,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,oBAAR;AAA8BiB,MAAAA;AAA9B,KAAD,CADrB,EAEEZ,KAFF,CAEQC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFjB;AAGA,GALD;AAMA,CAPM","sourcesContent":["import axios from 'axios'\n\nconst joblistingsUrl = 'api/v1/joblistings'\n// Gets all the job listings from the database\nexport const getJobListings = () => {\n\treturn dispatch => {\n\t\tdispatch({ type: 'LOADING_DATA' })\n\t\taxios.get(joblistingsUrl)\n\t\t\t.then(data => dispatch({ type: 'ADD_JOB_LISTINGS', jobListings: data.data.data }))\n\t\t\t.catch(error => console.error(error))\n\t}\n}\n// Creates a new job listing with the provided params\nexport const createJobListing = (name, description, startDate, endDate) => {\n\treturn dispatch => {\n\t\tdispatch({ type: 'LOADING_DATA' })\n\t\taxios.post(joblistingsUrl, {\n\t\t\tname: name,\n\t\t\tdescription: description,\n\t\t\tstart_date: startDate,\n\t\t\tend_date: endDate\n\t\t})\n\t\t\t.then(data => dispatch({ type: 'ADD_NEW_JOB_LISTING', jobListings: data.data }))\n\t\t\t.catch(error => console.error('There was an error creating this job listing', error))\n\t}\n}\n// Edits the selected job listing with the new params\nexport const editJobListing = (jobListingId, name, description, startDate, endDate) => {\n\treturn dispatch => {\n\t\tdispatch({ type: 'LOADING_DATA' })\n\t\taxios.patch(joblistingsUrl + '/' + jobListingId, {\n\t\t\tname: name,\n\t\t\tdescription: description,\n\t\t\tstart_date: startDate,\n\t\t\tend_date: endDate\n\t\t})\n\t\t\t.then(data => dispatch({ type: 'ADD_NEW_JOB_LISTING', jobListings: data.data }))\n\t\t\t.catch(error => console.error('There was an error updating this job listing', error))\n\t}\n}\n// Deletes the selected job listing from the database\nexport const deleteJobListing = jobListingId => {\n\treturn dispatch => {\n\t\tdispatch({ type: 'LOADING_DATA' })\n\t\taxios.delete(joblistingsUrl + '/' + jobListingId)\n\t\t\t.then(() => dispatch({ type: 'REMOVE_JOB_LISTING', jobListingId }))\n\t\t\t.catch(error => console.error(error))\n\t}\n}"]},"metadata":{},"sourceType":"module"}