{"ast":null,"code":"var _jsxFileName = \"/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/containers/PorfolioProjectsContainer.js\";\nimport React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchRepositories } from '../actions/githubActions';\nimport { RepositoryList } from '../components';\n\nclass PortfolioProjectContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"spinnerContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"dark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 6\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(RepositoryList, {\n          repositories: this.props.repositories,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchRepositories();\n  }\n\n  render() {\n    return this.handleLoading();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    repositories: state.github.repositories,\n    loading: state.github.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchRepositories\n})(PortfolioProjectContainer);","map":{"version":3,"sources":["/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/containers/PorfolioProjectsContainer.js"],"names":["React","Spinner","connect","fetchRepositories","RepositoryList","PortfolioProjectContainer","Component","handleLoading","props","loading","repositories","componentDidMount","render","mapStateToProps","state","github"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAEA,MAAMC,yBAAN,SAAwCL,KAAK,CAACM,SAA9C,CAAwD;AAAA;AAAA;;AAAA,SASvDC,aATuD,GASvC,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACvB,4BACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CADD;AAKA,OAND,MAMO;AACN,4BAAO,oBAAC,cAAD;AAAgB,UAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;AACD,KAnBsD;AAAA;;AACvDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKH,KAAL,CAAWL,iBAAX;AACA;;AAEDS,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKL,aAAL,EAAP;AACA;;AAPsD;;AAsBxD,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNJ,IAAAA,YAAY,EAAEI,KAAK,CAACC,MAAN,CAAaL,YADrB;AAEND,IAAAA,OAAO,EAAEK,KAAK,CAACC,MAAN,CAAaN;AAFhB,GAAP;AAIA,CALD;;AAOA,eAAeP,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,yBAAhD,CAAf","sourcesContent":["import React from 'react'\nimport { Spinner } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { fetchRepositories } from '../actions/githubActions'\nimport { RepositoryList } from '../components'\n\nclass PortfolioProjectContainer extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchRepositories()\n\t}\n\n\trender() {\n\t\treturn this.handleLoading()\n\t}\n\n\thandleLoading = () => {\n\t\tif (this.props.loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"spinnerContainer\">\n\t\t\t\t\t<Spinner animation=\"border\" variant=\"dark\" />\n\t\t\t\t</div >\n\t\t\t)\n\t\t} else {\n\t\t\treturn <RepositoryList repositories={this.props.repositories} />\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\trepositories: state.github.repositories,\n\t\tloading: state.github.loading\n\t}\n}\n\nexport default connect(mapStateToProps, { fetchRepositories })(PortfolioProjectContainer)"]},"metadata":{},"sourceType":"module"}