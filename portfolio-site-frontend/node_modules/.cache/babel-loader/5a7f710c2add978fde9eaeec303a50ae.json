{"ast":null,"code":"var _jsxFileName = \"/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/containers/UsersContainer.js\";\nimport React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getUsers, createUser, deleteUser } from '../actions/userActions';\nimport { Users, CreateUser } from '../components';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"spinnerContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"dark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 6\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 6\n          }\n        }, \"Create Users\"), /*#__PURE__*/React.createElement(CreateUser, {\n          createUser: this.props.createUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 6\n          }\n        }), /*#__PURE__*/React.createElement(Users, {\n          users: this.props.users,\n          deleteUser: this.props.deleteUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 6\n          }\n        }));\n      }\n    };\n  }\n\n  // Fetch all users when container mounts\n  componentDidMount() {\n    this.props.getUsers();\n  } // render users or spinner if loading\n\n\n  render() {\n    return this.handleLoading();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    loading: state.users.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUsers,\n  createUser,\n  deleteUser\n})(UsersContainer);","map":{"version":3,"sources":["/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/containers/UsersContainer.js"],"names":["React","Spinner","connect","getUsers","createUser","deleteUser","Users","CreateUser","UsersContainer","Component","handleLoading","props","loading","users","componentDidMount","render","mapStateToProps","state"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,wBAAjD;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,eAAlC;;AAEA,MAAMC,cAAN,SAA6BR,KAAK,CAACS,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAU5CC,aAV4C,GAU5B,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACvB,4BACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CADD;AAKA,OAND,MAMO;AACN,4BACC,uDACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,eAEC,oBAAC,UAAD;AAAY,UAAA,UAAU,EAAE,KAAKD,KAAL,CAAWP,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,eAGC,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAE,KAAKO,KAAL,CAAWE,KAAzB;AAAgC,UAAA,UAAU,EAAE,KAAKF,KAAL,CAAWN,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHD,CADD;AAOA;AACD,KA1B2C;AAAA;;AAC5C;AACAS,EAAAA,iBAAiB,GAAG;AACnB,SAAKH,KAAL,CAAWR,QAAX;AACA,GAJ2C,CAK5C;;;AACAY,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKL,aAAL,EAAP;AACA;;AAR2C;;AA6B7C,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYA,KADb;AAEND,IAAAA,OAAO,EAAEK,KAAK,CAACJ,KAAN,CAAYD;AAFf,GAAP;AAIA,CALD;;AAQA,eAAeV,OAAO,CAACc,eAAD,EAAkB;AACvCb,EAAAA,QADuC;AAEvCC,EAAAA,UAFuC;AAGvCC,EAAAA;AAHuC,CAAlB,CAAP,CAIZG,cAJY,CAAf","sourcesContent":["\nimport React from 'react'\nimport { Spinner } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { getUsers, createUser, deleteUser } from '../actions/userActions'\nimport { Users, CreateUser } from '../components'\n\nclass UsersContainer extends React.Component {\n\t// Fetch all users when container mounts\n\tcomponentDidMount() {\n\t\tthis.props.getUsers()\n\t}\n\t// render users or spinner if loading\n\trender() {\n\t\treturn this.handleLoading()\n\t}\n\n\thandleLoading = () => {\n\t\tif (this.props.loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"spinnerContainer\">\n\t\t\t\t\t<Spinner animation=\"border\" variant=\"dark\" />\n\t\t\t\t</div >\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h1>Create Users</h1>\n\t\t\t\t\t<CreateUser createUser={this.props.createUser} />\n\t\t\t\t\t<Users users={this.props.users} deleteUser={this.props.deleteUser} />\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tusers: state.users.users,\n\t\tloading: state.users.loading\n\t}\n}\n\n\nexport default connect(mapStateToProps, {\n\tgetUsers,\n\tcreateUser,\n\tdeleteUser\n})(UsersContainer)"]},"metadata":{},"sourceType":"module"}