{"ast":null,"code":"var _jsxFileName = \"/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/containers/ResumeContainer.js\";\nimport React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getJobListings } from '../actions/joblistingActions';\nimport { JobListings } from '../components';\n\nclass ResumeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"spinnerContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(Spinner, {\n          animation: \"border\",\n          variant: \"dark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 6\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(JobListings, {\n          jobListings: this.props.jobListings,\n          readOnly: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getJobListings();\n  }\n\n  render() {\n    return this.handleLoading();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    jobListings: state.jobListings.jobListings,\n    loading: state.jobListings.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getJobListings\n})(ResumeContainer);","map":{"version":3,"sources":["/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/containers/ResumeContainer.js"],"names":["React","Spinner","connect","getJobListings","JobListings","ResumeContainer","Component","handleLoading","props","loading","jobListings","componentDidMount","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAU7CC,aAV6C,GAU7B,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACvB,4BACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CADD;AAKA,OAND,MAMO;AACN,4BAAO,oBAAC,WAAD;AAAa,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAArC;AAAkD,UAAA,QAAQ,EAAE,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;AACD,KApB4C;AAAA;;AAC7CC,EAAAA,iBAAiB,GAAG;AACnB,SAAKH,KAAL,CAAWL,cAAX;AACA;;AAEDS,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKL,aAAL,EAAP;AACA;;AAP4C;;AAuB9C,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNJ,IAAAA,WAAW,EAAEI,KAAK,CAACJ,WAAN,CAAkBA,WADzB;AAEND,IAAAA,OAAO,EAAEK,KAAK,CAACJ,WAAN,CAAkBD;AAFrB,GAAP;AAIA,CALD;;AAOA,eAAeP,OAAO,CAACW,eAAD,EAAkB;AACvCV,EAAAA;AADuC,CAAlB,CAAP,CAEZE,eAFY,CAAf","sourcesContent":["import React from 'react'\nimport { Spinner } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { getJobListings } from '../actions/joblistingActions'\nimport { JobListings } from '../components'\n\nclass ResumeContainer extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.getJobListings()\n\t}\n\n\trender() {\n\t\treturn this.handleLoading()\n\t}\n\n\n\thandleLoading = () => {\n\t\tif (this.props.loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"spinnerContainer\">\n\t\t\t\t\t<Spinner animation=\"border\" variant=\"dark\" />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn <JobListings jobListings={this.props.jobListings} readOnly={true} />\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tjobListings: state.jobListings.jobListings,\n\t\tloading: state.jobListings.loading\n\t}\n}\n\nexport default connect(mapStateToProps, {\n\tgetJobListings\n})(ResumeContainer)"]},"metadata":{},"sourceType":"module"}