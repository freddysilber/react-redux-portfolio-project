{"ast":null,"code":"var _jsxFileName = \"/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/components/Covid/CovidDataChart.js\";\nimport React, { PureComponent } from 'react';\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\nexport default class CovidDataChart extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.getDataFromProps = () => {\n      const {\n        confirmed,\n        recovered,\n        critical,\n        deaths\n      } = this.props.latestTotals;\n      let data = [{\n        subject: 'Deaths',\n        Global: deaths\n      }, {\n        subject: 'Confirmed',\n        Global: confirmed\n      }, {\n        subject: 'Recovered',\n        Global: recovered\n      }, {\n        subject: 'Critical',\n        Global: critical\n      }];\n\n      if (this.props.dataByCountry !== null) {\n        data = [{\n          subject: 'Deaths',\n          Global: deaths,\n          Country: this.props.dataByCountry.deaths\n        }, {\n          subject: 'Confirmed',\n          Global: confirmed,\n          Country: this.props.dataByCountry.confirmed\n        }, {\n          subject: 'Recovered',\n          Global: recovered,\n          Country: this.props.dataByCountry.recovered\n        }, {\n          subject: 'Critical',\n          Global: critical,\n          Country: this.props.dataByCountry.critical\n        }];\n      }\n\n      return data;\n    };\n\n    this.getCountryName = () => {\n      return this.props.dataByCountry !== null ? this.props.dataByCountry.country : 'No Country Selected';\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RadarChart, {\n      cx: 400,\n      cy: 250,\n      outerRadius: 200,\n      width: 800,\n      height: 500,\n      data: this.getDataFromProps(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PolarGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(PolarAngleAxis, {\n      dataKey: \"subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(PolarRadiusAxis, {\n      angle: 135,\n      domain: [50, 250],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Radar, {\n      name: \"World Wide\",\n      dataKey: \"Global\",\n      stroke: \"#FF6200\",\n      fill: \"#FFC5A1\",\n      fillOpacity: 0.6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Radar, {\n      name: this.getCountryName(),\n      dataKey: \"Country\",\n      stroke: \"#0A7FD2\",\n      fill: \"#90BDDC\",\n      fillOpacity: 0.6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/freddysilber/Documents/GitHub/portfolio-site/portfolio-site-frontend/src/components/Covid/CovidDataChart.js"],"names":["React","PureComponent","Radar","RadarChart","PolarGrid","Legend","PolarAngleAxis","PolarRadiusAxis","CovidDataChart","getDataFromProps","confirmed","recovered","critical","deaths","props","latestTotals","data","subject","Global","dataByCountry","Country","getCountryName","country","render"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis } from 'recharts'\n\nexport default class CovidDataChart extends PureComponent {\n\tgetDataFromProps = () => {\n\t\tconst { confirmed, recovered, critical, deaths } = this.props.latestTotals\n\t\tlet data = [\n\t\t\t{ subject: 'Deaths', Global: deaths },\n\t\t\t{ subject: 'Confirmed', Global: confirmed },\n\t\t\t{ subject: 'Recovered', Global: recovered },\n\t\t\t{ subject: 'Critical', Global: critical }\n\t\t]\n\t\tif (this.props.dataByCountry !== null) {\n\t\t\tdata = [\n\t\t\t\t{ subject: 'Deaths', Global: deaths, Country: this.props.dataByCountry.deaths },\n\t\t\t\t{ subject: 'Confirmed', Global: confirmed, Country: this.props.dataByCountry.confirmed },\n\t\t\t\t{ subject: 'Recovered', Global: recovered, Country: this.props.dataByCountry.recovered },\n\t\t\t\t{ subject: 'Critical', Global: critical, Country: this.props.dataByCountry.critical }\n\t\t\t]\n\t\t}\n\t\treturn data\n\t}\n\n\tgetCountryName = () => {\n\t\treturn this.props.dataByCountry !== null ? this.props.dataByCountry.country : 'No Country Selected'\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<RadarChart cx={400} cy={250} outerRadius={200} width={800} height={500} data={this.getDataFromProps()}>\n\t\t\t\t<PolarGrid />\n\t\t\t\t<PolarAngleAxis dataKey=\"subject\" />\n\t\t\t\t<PolarRadiusAxis angle={135} domain={[50, 250]} />\n\t\t\t\t<Radar name=\"World Wide\" dataKey=\"Global\" stroke=\"#FF6200\" fill=\"#FFC5A1\" fillOpacity={0.6} />\n\t\t\t\t<Radar name={this.getCountryName()} dataKey=\"Country\" stroke=\"#0A7FD2\" fill=\"#90BDDC\" fillOpacity={0.6} />\n\t\t\t\t<Legend />\n\t\t\t</RadarChart>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}